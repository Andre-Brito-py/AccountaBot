{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Usu\\xE1rio\\\\Documents\\\\novo\\\\IA_MARK_01\\\\frontend\\\\src\\\\contexts\\\\AuthContext.tsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState, useEffect } from 'react';\nimport { authService } from '../services/authService';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext(undefined);\nexport const useAuth = () => {\n  _s();\n  const context = useContext(AuthContext);\n  if (context === undefined) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n_s(useAuth, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nexport const AuthProvider = ({\n  children\n}) => {\n  _s2();\n  const [user, setUser] = useState(null);\n  const [isLoading, setIsLoading] = useState(true);\n  useEffect(() => {\n    const initializeAuth = async () => {\n      try {\n        const token = localStorage.getItem('authToken');\n        if (token) {\n          const userData = await authService.validateToken(token);\n          setUser(userData);\n        }\n      } catch (error) {\n        console.error('Erro ao validar token:', error);\n        localStorage.removeItem('authToken');\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    initializeAuth();\n  }, []);\n  const login = async (email, password) => {\n    try {\n      setIsLoading(true);\n      const response = await authService.login(email, password);\n      if (response.success) {\n        setUser(response.user);\n        localStorage.setItem('authToken', response.token);\n        return true;\n      }\n      return false;\n    } catch (error) {\n      console.error('Erro no login:', error);\n      return false;\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  const logout = () => {\n    setUser(null);\n    localStorage.removeItem('authToken');\n    authService.logout();\n  };\n  const value = {\n    user,\n    login,\n    logout,\n    isLoading,\n    isAuthenticated: !!user\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 90,\n    columnNumber: 5\n  }, this);\n};\n_s2(AuthProvider, \"YajQB7LURzRD+QP5gw0+K2TZIWA=\");\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","authService","jsxDEV","_jsxDEV","AuthContext","undefined","useAuth","_s","context","Error","AuthProvider","children","_s2","user","setUser","isLoading","setIsLoading","initializeAuth","token","localStorage","getItem","userData","validateToken","error","console","removeItem","login","email","password","response","success","setItem","logout","value","isAuthenticated","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/UsuÃ¡rio/Documents/novo/IA_MARK_01/frontend/src/contexts/AuthContext.tsx"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect, ReactNode } from 'react';\nimport { authService } from '../services/authService';\n\ninterface User {\n  id: string;\n  email: string;\n  name: string;\n  role: string;\n}\n\ninterface AuthContextType {\n  user: User | null;\n  login: (email: string, password: string) => Promise<boolean>;\n  logout: () => void;\n  isLoading: boolean;\n  isAuthenticated: boolean;\n}\n\nconst AuthContext = createContext<AuthContextType | undefined>(undefined);\n\nexport const useAuth = () => {\n  const context = useContext(AuthContext);\n  if (context === undefined) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n\ninterface AuthProviderProps {\n  children: ReactNode;\n}\n\nexport const AuthProvider: React.FC<AuthProviderProps> = ({ children }) => {\n  const [user, setUser] = useState<User | null>(null);\n  const [isLoading, setIsLoading] = useState(true);\n\n  useEffect(() => {\n    const initializeAuth = async () => {\n      try {\n        const token = localStorage.getItem('authToken');\n        if (token) {\n          const userData = await authService.validateToken(token);\n          setUser(userData);\n        }\n      } catch (error) {\n        console.error('Erro ao validar token:', error);\n        localStorage.removeItem('authToken');\n      } finally {\n        setIsLoading(false);\n      }\n    };\n\n    initializeAuth();\n  }, []);\n\n  const login = async (email: string, password: string): Promise<boolean> => {\n    try {\n      setIsLoading(true);\n      const response = await authService.login(email, password);\n      \n      if (response.success) {\n        setUser(response.user);\n        localStorage.setItem('authToken', response.token);\n        return true;\n      }\n      return false;\n    } catch (error) {\n      console.error('Erro no login:', error);\n      return false;\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  const logout = () => {\n    setUser(null);\n    localStorage.removeItem('authToken');\n    authService.logout();\n  };\n\n  const value: AuthContextType = {\n    user,\n    login,\n    logout,\n    isLoading,\n    isAuthenticated: !!user,\n  };\n\n  return (\n    <AuthContext.Provider value={value}>\n      {children}\n    </AuthContext.Provider>\n  );\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}