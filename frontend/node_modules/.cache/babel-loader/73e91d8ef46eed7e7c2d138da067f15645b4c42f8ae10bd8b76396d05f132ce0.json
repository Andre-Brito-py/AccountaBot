{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Usu\\xE1rio\\\\Documents\\\\novo\\\\IA_MARK_01\\\\frontend\\\\src\\\\components\\\\Charts\\\\StockChart.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, ResponsiveContainer, Area, AreaChart } from 'recharts';\nimport { apiService } from '../../services/apiService';\nimport LoadingSpinner from '../UI/LoadingSpinner';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst StockChart = ({\n  symbol,\n  height = 400,\n  period = '1M',\n  type = 'area'\n}) => {\n  _s();\n  const [data, setData] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    loadChartData();\n  }, [symbol, period]);\n  const loadChartData = async () => {\n    try {\n      setIsLoading(true);\n      setError(null);\n      let chartData;\n      if (symbol === 'PORTFOLIO') {\n        // Dados mock para o portfólio\n        chartData = generateMockPortfolioData();\n      } else {\n        const historicalData = await apiService.getHistoricalData(symbol, period);\n        chartData = historicalData.map(item => ({\n          date: new Date(item.timestamp).toLocaleDateString('pt-BR'),\n          price: item.close,\n          volume: item.volume,\n          timestamp: item.timestamp\n        }));\n      }\n      setData(chartData);\n    } catch (err) {\n      console.error('Erro ao carregar dados do gráfico:', err);\n      setError('Erro ao carregar dados do gráfico');\n      // Fallback para dados mock\n      setData(generateMockData());\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  const generateMockPortfolioData = () => {\n    const data = [];\n    const baseValue = 120000;\n    const now = new Date();\n    for (let i = 29; i >= 0; i--) {\n      const date = new Date(now);\n      date.setDate(date.getDate() - i);\n      const variation = (Math.random() - 0.5) * 0.02; // ±1% variation\n      const price = baseValue * (1 + variation * i * 0.1);\n      data.push({\n        date: date.toLocaleDateString('pt-BR'),\n        price: Math.round(price * 100) / 100,\n        timestamp: date.getTime()\n      });\n    }\n    return data;\n  };\n  const generateMockData = () => {\n    const data = [];\n    const basePrice = 100;\n    const now = new Date();\n    for (let i = 29; i >= 0; i--) {\n      const date = new Date(now);\n      date.setDate(date.getDate() - i);\n      const variation = (Math.random() - 0.5) * 0.1; // ±5% variation\n      const price = basePrice * (1 + variation);\n      data.push({\n        date: date.toLocaleDateString('pt-BR'),\n        price: Math.round(price * 100) / 100,\n        volume: Math.floor(Math.random() * 1000000),\n        timestamp: date.getTime()\n      });\n    }\n    return data;\n  };\n  const formatTooltipValue = (value, name) => {\n    if (name === 'price') {\n      return [`R$ ${value.toLocaleString('pt-BR', {\n        minimumFractionDigits: 2\n      })}`, 'Preço'];\n    }\n    if (name === 'volume') {\n      return [value.toLocaleString('pt-BR'), 'Volume'];\n    }\n    return [value, name];\n  };\n  const formatYAxisTick = value => {\n    if (symbol === 'PORTFOLIO') {\n      return `R$ ${(value / 1000).toFixed(0)}k`;\n    }\n    return `R$ ${value.toFixed(2)}`;\n  };\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex items-center justify-center\",\n      style: {\n        height\n      },\n      children: /*#__PURE__*/_jsxDEV(LoadingSpinner, {\n        size: \"lg\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 7\n    }, this);\n  }\n  if (error && data.length === 0) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex items-center justify-center\",\n      style: {\n        height\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-center\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-danger-600 mb-2\",\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: loadChartData,\n          className: \"btn-primary btn-sm\",\n          children: \"Tentar Novamente\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 7\n    }, this);\n  }\n  const isPositiveTrend = data.length > 1 && data[data.length - 1].price > data[0].price;\n  const chartColor = isPositiveTrend ? '#22c55e' : '#ef4444';\n  const fillColor = isPositiveTrend ? 'rgba(34, 197, 94, 0.1)' : 'rgba(239, 68, 68, 0.1)';\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      height\n    },\n    children: /*#__PURE__*/_jsxDEV(ResponsiveContainer, {\n      width: \"100%\",\n      height: \"100%\",\n      children: type === 'area' ? /*#__PURE__*/_jsxDEV(AreaChart, {\n        data: data,\n        margin: {\n          top: 5,\n          right: 30,\n          left: 20,\n          bottom: 5\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"defs\", {\n          children: /*#__PURE__*/_jsxDEV(\"linearGradient\", {\n            id: \"colorPrice\",\n            x1: \"0\",\n            y1: \"0\",\n            x2: \"0\",\n            y2: \"1\",\n            children: [/*#__PURE__*/_jsxDEV(\"stop\", {\n              offset: \"5%\",\n              stopColor: chartColor,\n              stopOpacity: 0.3\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 172,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"stop\", {\n              offset: \"95%\",\n              stopColor: chartColor,\n              stopOpacity: 0\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 173,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 171,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(CartesianGrid, {\n          strokeDasharray: \"3 3\",\n          stroke: \"#e2e8f0\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(XAxis, {\n          dataKey: \"date\",\n          stroke: \"#64748b\",\n          fontSize: 12,\n          tickLine: false,\n          axisLine: false\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(YAxis, {\n          stroke: \"#64748b\",\n          fontSize: 12,\n          tickLine: false,\n          axisLine: false,\n          tickFormatter: formatYAxisTick\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n          contentStyle: {\n            backgroundColor: 'white',\n            border: '1px solid #e2e8f0',\n            borderRadius: '8px',\n            boxShadow: '0 4px 6px -1px rgba(0, 0, 0, 0.1)'\n          },\n          formatter: formatTooltipValue,\n          labelStyle: {\n            color: '#374151'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 191,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Area, {\n          type: \"monotone\",\n          dataKey: \"price\",\n          stroke: chartColor,\n          strokeWidth: 2,\n          fill: \"url(#colorPrice)\",\n          dot: false,\n          activeDot: {\n            r: 4,\n            stroke: chartColor,\n            strokeWidth: 2,\n            fill: 'white'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 201,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(LineChart, {\n        data: data,\n        margin: {\n          top: 5,\n          right: 30,\n          left: 20,\n          bottom: 5\n        },\n        children: [/*#__PURE__*/_jsxDEV(CartesianGrid, {\n          strokeDasharray: \"3 3\",\n          stroke: \"#e2e8f0\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 213,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(XAxis, {\n          dataKey: \"date\",\n          stroke: \"#64748b\",\n          fontSize: 12,\n          tickLine: false,\n          axisLine: false\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 214,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(YAxis, {\n          stroke: \"#64748b\",\n          fontSize: 12,\n          tickLine: false,\n          axisLine: false,\n          tickFormatter: formatYAxisTick\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 221,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n          contentStyle: {\n            backgroundColor: 'white',\n            border: '1px solid #e2e8f0',\n            borderRadius: '8px',\n            boxShadow: '0 4px 6px -1px rgba(0, 0, 0, 0.1)'\n          },\n          formatter: formatTooltipValue,\n          labelStyle: {\n            color: '#374151'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 228,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Line, {\n          type: \"monotone\",\n          dataKey: \"price\",\n          stroke: chartColor,\n          strokeWidth: 2,\n          dot: false,\n          activeDot: {\n            r: 4,\n            stroke: chartColor,\n            strokeWidth: 2,\n            fill: 'white'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 238,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 166,\n    columnNumber: 5\n  }, this);\n};\n_s(StockChart, \"/iJyIuGohDU8HmiUawlNhy7FaxE=\");\n_c = StockChart;\nexport default StockChart;\nvar _c;\n$RefreshReg$(_c, \"StockChart\");","map":{"version":3,"names":["React","useState","useEffect","LineChart","Line","XAxis","YAxis","CartesianGrid","Tooltip","ResponsiveContainer","Area","AreaChart","apiService","LoadingSpinner","jsxDEV","_jsxDEV","StockChart","symbol","height","period","type","_s","data","setData","isLoading","setIsLoading","error","setError","loadChartData","chartData","generateMockPortfolioData","historicalData","getHistoricalData","map","item","date","Date","timestamp","toLocaleDateString","price","close","volume","err","console","generateMockData","baseValue","now","i","setDate","getDate","variation","Math","random","push","round","getTime","basePrice","floor","formatTooltipValue","value","name","toLocaleString","minimumFractionDigits","formatYAxisTick","toFixed","className","style","children","size","fileName","_jsxFileName","lineNumber","columnNumber","length","onClick","isPositiveTrend","chartColor","fillColor","width","margin","top","right","left","bottom","id","x1","y1","x2","y2","offset","stopColor","stopOpacity","strokeDasharray","stroke","dataKey","fontSize","tickLine","axisLine","tickFormatter","contentStyle","backgroundColor","border","borderRadius","boxShadow","formatter","labelStyle","color","strokeWidth","fill","dot","activeDot","r","_c","$RefreshReg$"],"sources":["C:/Users/Usuário/Documents/novo/IA_MARK_01/frontend/src/components/Charts/StockChart.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport {\n  LineChart,\n  Line,\n  XAxis,\n  YAxis,\n  CartesianGrid,\n  Tooltip,\n  ResponsiveContainer,\n  Area,\n  AreaChart,\n} from 'recharts';\nimport { apiService } from '../../services/apiService';\nimport LoadingSpinner from '../UI/LoadingSpinner';\n\ninterface StockChartProps {\n  symbol: string;\n  height?: number;\n  period?: string;\n  type?: 'line' | 'area';\n}\n\ninterface ChartData {\n  date: string;\n  price: number;\n  volume?: number;\n  timestamp: number;\n}\n\nconst StockChart: React.FC<StockChartProps> = ({\n  symbol,\n  height = 400,\n  period = '1M',\n  type = 'area',\n}) => {\n  const [data, setData] = useState<ChartData[]>([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [error, setError] = useState<string | null>(null);\n\n  useEffect(() => {\n    loadChartData();\n  }, [symbol, period]);\n\n  const loadChartData = async () => {\n    try {\n      setIsLoading(true);\n      setError(null);\n      \n      let chartData: ChartData[];\n      \n      if (symbol === 'PORTFOLIO') {\n        // Dados mock para o portfólio\n        chartData = generateMockPortfolioData();\n      } else {\n        const historicalData = await apiService.getHistoricalData(symbol, period);\n        chartData = historicalData.map((item: any) => ({\n          date: new Date(item.timestamp).toLocaleDateString('pt-BR'),\n          price: item.close,\n          volume: item.volume,\n          timestamp: item.timestamp,\n        }));\n      }\n      \n      setData(chartData);\n    } catch (err) {\n      console.error('Erro ao carregar dados do gráfico:', err);\n      setError('Erro ao carregar dados do gráfico');\n      // Fallback para dados mock\n      setData(generateMockData());\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  const generateMockPortfolioData = (): ChartData[] => {\n    const data: ChartData[] = [];\n    const baseValue = 120000;\n    const now = new Date();\n    \n    for (let i = 29; i >= 0; i--) {\n      const date = new Date(now);\n      date.setDate(date.getDate() - i);\n      \n      const variation = (Math.random() - 0.5) * 0.02; // ±1% variation\n      const price = baseValue * (1 + variation * i * 0.1);\n      \n      data.push({\n        date: date.toLocaleDateString('pt-BR'),\n        price: Math.round(price * 100) / 100,\n        timestamp: date.getTime(),\n      });\n    }\n    \n    return data;\n  };\n\n  const generateMockData = (): ChartData[] => {\n    const data: ChartData[] = [];\n    const basePrice = 100;\n    const now = new Date();\n    \n    for (let i = 29; i >= 0; i--) {\n      const date = new Date(now);\n      date.setDate(date.getDate() - i);\n      \n      const variation = (Math.random() - 0.5) * 0.1; // ±5% variation\n      const price = basePrice * (1 + variation);\n      \n      data.push({\n        date: date.toLocaleDateString('pt-BR'),\n        price: Math.round(price * 100) / 100,\n        volume: Math.floor(Math.random() * 1000000),\n        timestamp: date.getTime(),\n      });\n    }\n    \n    return data;\n  };\n\n  const formatTooltipValue = (value: number, name: string) => {\n    if (name === 'price') {\n      return [`R$ ${value.toLocaleString('pt-BR', { minimumFractionDigits: 2 })}`, 'Preço'];\n    }\n    if (name === 'volume') {\n      return [value.toLocaleString('pt-BR'), 'Volume'];\n    }\n    return [value, name];\n  };\n\n  const formatYAxisTick = (value: number) => {\n    if (symbol === 'PORTFOLIO') {\n      return `R$ ${(value / 1000).toFixed(0)}k`;\n    }\n    return `R$ ${value.toFixed(2)}`;\n  };\n\n  if (isLoading) {\n    return (\n      <div className=\"flex items-center justify-center\" style={{ height }}>\n        <LoadingSpinner size=\"lg\" />\n      </div>\n    );\n  }\n\n  if (error && data.length === 0) {\n    return (\n      <div className=\"flex items-center justify-center\" style={{ height }}>\n        <div className=\"text-center\">\n          <p className=\"text-danger-600 mb-2\">{error}</p>\n          <button\n            onClick={loadChartData}\n            className=\"btn-primary btn-sm\"\n          >\n            Tentar Novamente\n          </button>\n        </div>\n      </div>\n    );\n  }\n\n  const isPositiveTrend = data.length > 1 && data[data.length - 1].price > data[0].price;\n  const chartColor = isPositiveTrend ? '#22c55e' : '#ef4444';\n  const fillColor = isPositiveTrend ? 'rgba(34, 197, 94, 0.1)' : 'rgba(239, 68, 68, 0.1)';\n\n  return (\n    <div style={{ height }}>\n      <ResponsiveContainer width=\"100%\" height=\"100%\">\n        {type === 'area' ? (\n          <AreaChart data={data} margin={{ top: 5, right: 30, left: 20, bottom: 5 }}>\n            <defs>\n              <linearGradient id=\"colorPrice\" x1=\"0\" y1=\"0\" x2=\"0\" y2=\"1\">\n                <stop offset=\"5%\" stopColor={chartColor} stopOpacity={0.3} />\n                <stop offset=\"95%\" stopColor={chartColor} stopOpacity={0} />\n              </linearGradient>\n            </defs>\n            <CartesianGrid strokeDasharray=\"3 3\" stroke=\"#e2e8f0\" />\n            <XAxis\n              dataKey=\"date\"\n              stroke=\"#64748b\"\n              fontSize={12}\n              tickLine={false}\n              axisLine={false}\n            />\n            <YAxis\n              stroke=\"#64748b\"\n              fontSize={12}\n              tickLine={false}\n              axisLine={false}\n              tickFormatter={formatYAxisTick}\n            />\n            <Tooltip\n              contentStyle={{\n                backgroundColor: 'white',\n                border: '1px solid #e2e8f0',\n                borderRadius: '8px',\n                boxShadow: '0 4px 6px -1px rgba(0, 0, 0, 0.1)',\n              }}\n              formatter={formatTooltipValue}\n              labelStyle={{ color: '#374151' }}\n            />\n            <Area\n              type=\"monotone\"\n              dataKey=\"price\"\n              stroke={chartColor}\n              strokeWidth={2}\n              fill=\"url(#colorPrice)\"\n              dot={false}\n              activeDot={{ r: 4, stroke: chartColor, strokeWidth: 2, fill: 'white' }}\n            />\n          </AreaChart>\n        ) : (\n          <LineChart data={data} margin={{ top: 5, right: 30, left: 20, bottom: 5 }}>\n            <CartesianGrid strokeDasharray=\"3 3\" stroke=\"#e2e8f0\" />\n            <XAxis\n              dataKey=\"date\"\n              stroke=\"#64748b\"\n              fontSize={12}\n              tickLine={false}\n              axisLine={false}\n            />\n            <YAxis\n              stroke=\"#64748b\"\n              fontSize={12}\n              tickLine={false}\n              axisLine={false}\n              tickFormatter={formatYAxisTick}\n            />\n            <Tooltip\n              contentStyle={{\n                backgroundColor: 'white',\n                border: '1px solid #e2e8f0',\n                borderRadius: '8px',\n                boxShadow: '0 4px 6px -1px rgba(0, 0, 0, 0.1)',\n              }}\n              formatter={formatTooltipValue}\n              labelStyle={{ color: '#374151' }}\n            />\n            <Line\n              type=\"monotone\"\n              dataKey=\"price\"\n              stroke={chartColor}\n              strokeWidth={2}\n              dot={false}\n              activeDot={{ r: 4, stroke: chartColor, strokeWidth: 2, fill: 'white' }}\n            />\n          </LineChart>\n        )}\n      </ResponsiveContainer>\n    </div>\n  );\n};\n\nexport default StockChart;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SACEC,SAAS,EACTC,IAAI,EACJC,KAAK,EACLC,KAAK,EACLC,aAAa,EACbC,OAAO,EACPC,mBAAmB,EACnBC,IAAI,EACJC,SAAS,QACJ,UAAU;AACjB,SAASC,UAAU,QAAQ,2BAA2B;AACtD,OAAOC,cAAc,MAAM,sBAAsB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAgBlD,MAAMC,UAAqC,GAAGA,CAAC;EAC7CC,MAAM;EACNC,MAAM,GAAG,GAAG;EACZC,MAAM,GAAG,IAAI;EACbC,IAAI,GAAG;AACT,CAAC,KAAK;EAAAC,EAAA;EACJ,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGtB,QAAQ,CAAc,EAAE,CAAC;EACjD,MAAM,CAACuB,SAAS,EAAEC,YAAY,CAAC,GAAGxB,QAAQ,CAAC,IAAI,CAAC;EAChD,MAAM,CAACyB,KAAK,EAAEC,QAAQ,CAAC,GAAG1B,QAAQ,CAAgB,IAAI,CAAC;EAEvDC,SAAS,CAAC,MAAM;IACd0B,aAAa,CAAC,CAAC;EACjB,CAAC,EAAE,CAACX,MAAM,EAAEE,MAAM,CAAC,CAAC;EAEpB,MAAMS,aAAa,GAAG,MAAAA,CAAA,KAAY;IAChC,IAAI;MACFH,YAAY,CAAC,IAAI,CAAC;MAClBE,QAAQ,CAAC,IAAI,CAAC;MAEd,IAAIE,SAAsB;MAE1B,IAAIZ,MAAM,KAAK,WAAW,EAAE;QAC1B;QACAY,SAAS,GAAGC,yBAAyB,CAAC,CAAC;MACzC,CAAC,MAAM;QACL,MAAMC,cAAc,GAAG,MAAMnB,UAAU,CAACoB,iBAAiB,CAACf,MAAM,EAAEE,MAAM,CAAC;QACzEU,SAAS,GAAGE,cAAc,CAACE,GAAG,CAAEC,IAAS,KAAM;UAC7CC,IAAI,EAAE,IAAIC,IAAI,CAACF,IAAI,CAACG,SAAS,CAAC,CAACC,kBAAkB,CAAC,OAAO,CAAC;UAC1DC,KAAK,EAAEL,IAAI,CAACM,KAAK;UACjBC,MAAM,EAAEP,IAAI,CAACO,MAAM;UACnBJ,SAAS,EAAEH,IAAI,CAACG;QAClB,CAAC,CAAC,CAAC;MACL;MAEAd,OAAO,CAACM,SAAS,CAAC;IACpB,CAAC,CAAC,OAAOa,GAAG,EAAE;MACZC,OAAO,CAACjB,KAAK,CAAC,oCAAoC,EAAEgB,GAAG,CAAC;MACxDf,QAAQ,CAAC,mCAAmC,CAAC;MAC7C;MACAJ,OAAO,CAACqB,gBAAgB,CAAC,CAAC,CAAC;IAC7B,CAAC,SAAS;MACRnB,YAAY,CAAC,KAAK,CAAC;IACrB;EACF,CAAC;EAED,MAAMK,yBAAyB,GAAGA,CAAA,KAAmB;IACnD,MAAMR,IAAiB,GAAG,EAAE;IAC5B,MAAMuB,SAAS,GAAG,MAAM;IACxB,MAAMC,GAAG,GAAG,IAAIV,IAAI,CAAC,CAAC;IAEtB,KAAK,IAAIW,CAAC,GAAG,EAAE,EAAEA,CAAC,IAAI,CAAC,EAAEA,CAAC,EAAE,EAAE;MAC5B,MAAMZ,IAAI,GAAG,IAAIC,IAAI,CAACU,GAAG,CAAC;MAC1BX,IAAI,CAACa,OAAO,CAACb,IAAI,CAACc,OAAO,CAAC,CAAC,GAAGF,CAAC,CAAC;MAEhC,MAAMG,SAAS,GAAG,CAACC,IAAI,CAACC,MAAM,CAAC,CAAC,GAAG,GAAG,IAAI,IAAI,CAAC,CAAC;MAChD,MAAMb,KAAK,GAAGM,SAAS,IAAI,CAAC,GAAGK,SAAS,GAAGH,CAAC,GAAG,GAAG,CAAC;MAEnDzB,IAAI,CAAC+B,IAAI,CAAC;QACRlB,IAAI,EAAEA,IAAI,CAACG,kBAAkB,CAAC,OAAO,CAAC;QACtCC,KAAK,EAAEY,IAAI,CAACG,KAAK,CAACf,KAAK,GAAG,GAAG,CAAC,GAAG,GAAG;QACpCF,SAAS,EAAEF,IAAI,CAACoB,OAAO,CAAC;MAC1B,CAAC,CAAC;IACJ;IAEA,OAAOjC,IAAI;EACb,CAAC;EAED,MAAMsB,gBAAgB,GAAGA,CAAA,KAAmB;IAC1C,MAAMtB,IAAiB,GAAG,EAAE;IAC5B,MAAMkC,SAAS,GAAG,GAAG;IACrB,MAAMV,GAAG,GAAG,IAAIV,IAAI,CAAC,CAAC;IAEtB,KAAK,IAAIW,CAAC,GAAG,EAAE,EAAEA,CAAC,IAAI,CAAC,EAAEA,CAAC,EAAE,EAAE;MAC5B,MAAMZ,IAAI,GAAG,IAAIC,IAAI,CAACU,GAAG,CAAC;MAC1BX,IAAI,CAACa,OAAO,CAACb,IAAI,CAACc,OAAO,CAAC,CAAC,GAAGF,CAAC,CAAC;MAEhC,MAAMG,SAAS,GAAG,CAACC,IAAI,CAACC,MAAM,CAAC,CAAC,GAAG,GAAG,IAAI,GAAG,CAAC,CAAC;MAC/C,MAAMb,KAAK,GAAGiB,SAAS,IAAI,CAAC,GAAGN,SAAS,CAAC;MAEzC5B,IAAI,CAAC+B,IAAI,CAAC;QACRlB,IAAI,EAAEA,IAAI,CAACG,kBAAkB,CAAC,OAAO,CAAC;QACtCC,KAAK,EAAEY,IAAI,CAACG,KAAK,CAACf,KAAK,GAAG,GAAG,CAAC,GAAG,GAAG;QACpCE,MAAM,EAAEU,IAAI,CAACM,KAAK,CAACN,IAAI,CAACC,MAAM,CAAC,CAAC,GAAG,OAAO,CAAC;QAC3Cf,SAAS,EAAEF,IAAI,CAACoB,OAAO,CAAC;MAC1B,CAAC,CAAC;IACJ;IAEA,OAAOjC,IAAI;EACb,CAAC;EAED,MAAMoC,kBAAkB,GAAGA,CAACC,KAAa,EAAEC,IAAY,KAAK;IAC1D,IAAIA,IAAI,KAAK,OAAO,EAAE;MACpB,OAAO,CAAC,MAAMD,KAAK,CAACE,cAAc,CAAC,OAAO,EAAE;QAAEC,qBAAqB,EAAE;MAAE,CAAC,CAAC,EAAE,EAAE,OAAO,CAAC;IACvF;IACA,IAAIF,IAAI,KAAK,QAAQ,EAAE;MACrB,OAAO,CAACD,KAAK,CAACE,cAAc,CAAC,OAAO,CAAC,EAAE,QAAQ,CAAC;IAClD;IACA,OAAO,CAACF,KAAK,EAAEC,IAAI,CAAC;EACtB,CAAC;EAED,MAAMG,eAAe,GAAIJ,KAAa,IAAK;IACzC,IAAI1C,MAAM,KAAK,WAAW,EAAE;MAC1B,OAAO,MAAM,CAAC0C,KAAK,GAAG,IAAI,EAAEK,OAAO,CAAC,CAAC,CAAC,GAAG;IAC3C;IACA,OAAO,MAAML,KAAK,CAACK,OAAO,CAAC,CAAC,CAAC,EAAE;EACjC,CAAC;EAED,IAAIxC,SAAS,EAAE;IACb,oBACET,OAAA;MAAKkD,SAAS,EAAC,kCAAkC;MAACC,KAAK,EAAE;QAAEhD;MAAO,CAAE;MAAAiD,QAAA,eAClEpD,OAAA,CAACF,cAAc;QAACuD,IAAI,EAAC;MAAI;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACzB,CAAC;EAEV;EAEA,IAAI9C,KAAK,IAAIJ,IAAI,CAACmD,MAAM,KAAK,CAAC,EAAE;IAC9B,oBACE1D,OAAA;MAAKkD,SAAS,EAAC,kCAAkC;MAACC,KAAK,EAAE;QAAEhD;MAAO,CAAE;MAAAiD,QAAA,eAClEpD,OAAA;QAAKkD,SAAS,EAAC,aAAa;QAAAE,QAAA,gBAC1BpD,OAAA;UAAGkD,SAAS,EAAC,sBAAsB;UAAAE,QAAA,EAAEzC;QAAK;UAAA2C,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eAC/CzD,OAAA;UACE2D,OAAO,EAAE9C,aAAc;UACvBqC,SAAS,EAAC,oBAAoB;UAAAE,QAAA,EAC/B;QAED;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACN;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC;EAEV;EAEA,MAAMG,eAAe,GAAGrD,IAAI,CAACmD,MAAM,GAAG,CAAC,IAAInD,IAAI,CAACA,IAAI,CAACmD,MAAM,GAAG,CAAC,CAAC,CAAClC,KAAK,GAAGjB,IAAI,CAAC,CAAC,CAAC,CAACiB,KAAK;EACtF,MAAMqC,UAAU,GAAGD,eAAe,GAAG,SAAS,GAAG,SAAS;EAC1D,MAAME,SAAS,GAAGF,eAAe,GAAG,wBAAwB,GAAG,wBAAwB;EAEvF,oBACE5D,OAAA;IAAKmD,KAAK,EAAE;MAAEhD;IAAO,CAAE;IAAAiD,QAAA,eACrBpD,OAAA,CAACN,mBAAmB;MAACqE,KAAK,EAAC,MAAM;MAAC5D,MAAM,EAAC,MAAM;MAAAiD,QAAA,EAC5C/C,IAAI,KAAK,MAAM,gBACdL,OAAA,CAACJ,SAAS;QAACW,IAAI,EAAEA,IAAK;QAACyD,MAAM,EAAE;UAAEC,GAAG,EAAE,CAAC;UAAEC,KAAK,EAAE,EAAE;UAAEC,IAAI,EAAE,EAAE;UAAEC,MAAM,EAAE;QAAE,CAAE;QAAAhB,QAAA,gBACxEpD,OAAA;UAAAoD,QAAA,eACEpD,OAAA;YAAgBqE,EAAE,EAAC,YAAY;YAACC,EAAE,EAAC,GAAG;YAACC,EAAE,EAAC,GAAG;YAACC,EAAE,EAAC,GAAG;YAACC,EAAE,EAAC,GAAG;YAAArB,QAAA,gBACzDpD,OAAA;cAAM0E,MAAM,EAAC,IAAI;cAACC,SAAS,EAAEd,UAAW;cAACe,WAAW,EAAE;YAAI;cAAAtB,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE,CAAC,eAC7DzD,OAAA;cAAM0E,MAAM,EAAC,KAAK;cAACC,SAAS,EAAEd,UAAW;cAACe,WAAW,EAAE;YAAE;cAAAtB,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC9C;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACb,CAAC,eACPzD,OAAA,CAACR,aAAa;UAACqF,eAAe,EAAC,KAAK;UAACC,MAAM,EAAC;QAAS;UAAAxB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,eACxDzD,OAAA,CAACV,KAAK;UACJyF,OAAO,EAAC,MAAM;UACdD,MAAM,EAAC,SAAS;UAChBE,QAAQ,EAAE,EAAG;UACbC,QAAQ,EAAE,KAAM;UAChBC,QAAQ,EAAE;QAAM;UAAA5B,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACjB,CAAC,eACFzD,OAAA,CAACT,KAAK;UACJuF,MAAM,EAAC,SAAS;UAChBE,QAAQ,EAAE,EAAG;UACbC,QAAQ,EAAE,KAAM;UAChBC,QAAQ,EAAE,KAAM;UAChBC,aAAa,EAAEnC;QAAgB;UAAAM,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAChC,CAAC,eACFzD,OAAA,CAACP,OAAO;UACN2F,YAAY,EAAE;YACZC,eAAe,EAAE,OAAO;YACxBC,MAAM,EAAE,mBAAmB;YAC3BC,YAAY,EAAE,KAAK;YACnBC,SAAS,EAAE;UACb,CAAE;UACFC,SAAS,EAAE9C,kBAAmB;UAC9B+C,UAAU,EAAE;YAAEC,KAAK,EAAE;UAAU;QAAE;UAAArC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAClC,CAAC,eACFzD,OAAA,CAACL,IAAI;UACHU,IAAI,EAAC,UAAU;UACf0E,OAAO,EAAC,OAAO;UACfD,MAAM,EAAEjB,UAAW;UACnB+B,WAAW,EAAE,CAAE;UACfC,IAAI,EAAC,kBAAkB;UACvBC,GAAG,EAAE,KAAM;UACXC,SAAS,EAAE;YAAEC,CAAC,EAAE,CAAC;YAAElB,MAAM,EAAEjB,UAAU;YAAE+B,WAAW,EAAE,CAAC;YAAEC,IAAI,EAAE;UAAQ;QAAE;UAAAvC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACxE,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACO,CAAC,gBAEZzD,OAAA,CAACZ,SAAS;QAACmB,IAAI,EAAEA,IAAK;QAACyD,MAAM,EAAE;UAAEC,GAAG,EAAE,CAAC;UAAEC,KAAK,EAAE,EAAE;UAAEC,IAAI,EAAE,EAAE;UAAEC,MAAM,EAAE;QAAE,CAAE;QAAAhB,QAAA,gBACxEpD,OAAA,CAACR,aAAa;UAACqF,eAAe,EAAC,KAAK;UAACC,MAAM,EAAC;QAAS;UAAAxB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,eACxDzD,OAAA,CAACV,KAAK;UACJyF,OAAO,EAAC,MAAM;UACdD,MAAM,EAAC,SAAS;UAChBE,QAAQ,EAAE,EAAG;UACbC,QAAQ,EAAE,KAAM;UAChBC,QAAQ,EAAE;QAAM;UAAA5B,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACjB,CAAC,eACFzD,OAAA,CAACT,KAAK;UACJuF,MAAM,EAAC,SAAS;UAChBE,QAAQ,EAAE,EAAG;UACbC,QAAQ,EAAE,KAAM;UAChBC,QAAQ,EAAE,KAAM;UAChBC,aAAa,EAAEnC;QAAgB;UAAAM,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAChC,CAAC,eACFzD,OAAA,CAACP,OAAO;UACN2F,YAAY,EAAE;YACZC,eAAe,EAAE,OAAO;YACxBC,MAAM,EAAE,mBAAmB;YAC3BC,YAAY,EAAE,KAAK;YACnBC,SAAS,EAAE;UACb,CAAE;UACFC,SAAS,EAAE9C,kBAAmB;UAC9B+C,UAAU,EAAE;YAAEC,KAAK,EAAE;UAAU;QAAE;UAAArC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAClC,CAAC,eACFzD,OAAA,CAACX,IAAI;UACHgB,IAAI,EAAC,UAAU;UACf0E,OAAO,EAAC,OAAO;UACfD,MAAM,EAAEjB,UAAW;UACnB+B,WAAW,EAAE,CAAE;UACfE,GAAG,EAAE,KAAM;UACXC,SAAS,EAAE;YAAEC,CAAC,EAAE,CAAC;YAAElB,MAAM,EAAEjB,UAAU;YAAE+B,WAAW,EAAE,CAAC;YAAEC,IAAI,EAAE;UAAQ;QAAE;UAAAvC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACxE,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACO;IACZ;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACkB;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACnB,CAAC;AAEV,CAAC;AAACnD,EAAA,CA7NIL,UAAqC;AAAAgG,EAAA,GAArChG,UAAqC;AA+N3C,eAAeA,UAAU;AAAC,IAAAgG,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}