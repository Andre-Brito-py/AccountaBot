{"ast":null,"code":"import axios from 'axios';\nconst API_BASE_URL = process.env.REACT_APP_API_URL || 'http://localhost:8080/api';\nclass ApiService {\n  constructor() {\n    this.client = void 0;\n    this.client = axios.create({\n      baseURL: API_BASE_URL,\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    });\n\n    // Interceptor para adicionar token de autenticação\n    this.client.interceptors.request.use(config => {\n      const token = localStorage.getItem('authToken');\n      if (token) {\n        config.headers.Authorization = `Bearer ${token}`;\n      }\n      return config;\n    }, error => Promise.reject(error));\n\n    // Interceptor para lidar com erros de resposta\n    this.client.interceptors.response.use(response => response, error => {\n      var _error$response;\n      if (((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.status) === 401) {\n        localStorage.removeItem('authToken');\n        window.location.href = '/login';\n      }\n      return Promise.reject(error);\n    });\n  }\n\n  // Métodos para dados financeiros\n  async getMarketData(symbols) {\n    const response = await this.client.get('/market/data', {\n      params: {\n        symbols: symbols.join(',')\n      }\n    });\n    return response.data;\n  }\n  async getHistoricalData(symbol, period = '1y') {\n    const response = await this.client.get(`/market/historical/${symbol}`, {\n      params: {\n        period\n      }\n    });\n    return response.data;\n  }\n  async searchSymbols(query) {\n    const response = await this.client.get('/market/search', {\n      params: {\n        q: query\n      }\n    });\n    return response.data;\n  }\n\n  // Métodos para análises\n  async getAnalyses(symbol) {\n    const response = await this.client.get('/analyses', {\n      params: symbol ? {\n        symbol\n      } : {}\n    });\n    return response.data;\n  }\n  async createAnalysis(symbol, agentId) {\n    const response = await this.client.post('/analyses', {\n      symbol,\n      agentId\n    });\n    return response.data;\n  }\n  async getAnalysisById(id) {\n    const response = await this.client.get(`/analyses/${id}`);\n    return response.data;\n  }\n\n  // Métodos para agentes\n  async getAgents() {\n    const response = await this.client.get('/agents');\n    return response.data;\n  }\n  async getAgentById(id) {\n    const response = await this.client.get(`/agents/${id}`);\n    return response.data;\n  }\n  async createAgent(agent) {\n    const response = await this.client.post('/agents', agent);\n    return response.data;\n  }\n  async updateAgent(id, agent) {\n    const response = await this.client.put(`/agents/${id}`, agent);\n    return response.data;\n  }\n  async deleteAgent(id) {\n    await this.client.delete(`/agents/${id}`);\n  }\n  async executeAgent(id, parameters) {\n    const response = await this.client.post(`/agents/${id}/execute`, parameters);\n    return response.data;\n  }\n  async restartAgent(id) {\n    await this.client.post(`/agents/${id}/restart`);\n  }\n\n  // Métodos para portfólio\n  async getPortfolios() {\n    const response = await this.client.get('/portfolios');\n    return response.data;\n  }\n  async getPortfolioById(id) {\n    const response = await this.client.get(`/portfolios/${id}`);\n    return response.data;\n  }\n  async createPortfolio(portfolio) {\n    const response = await this.client.post('/portfolios', portfolio);\n    return response.data;\n  }\n  async updatePortfolio(id, portfolio) {\n    const response = await this.client.put(`/portfolios/${id}`, portfolio);\n    return response.data;\n  }\n  async deletePortfolio(id) {\n    await this.client.delete(`/portfolios/${id}`);\n  }\n  async addPosition(portfolioId, position) {\n    const response = await this.client.post(`/portfolios/${portfolioId}/positions`, position);\n    return response.data;\n  }\n  async updatePosition(portfolioId, symbol, position) {\n    const response = await this.client.put(`/portfolios/${portfolioId}/positions/${symbol}`, position);\n    return response.data;\n  }\n  async removePosition(portfolioId, symbol) {\n    await this.client.delete(`/portfolios/${portfolioId}/positions/${symbol}`);\n  }\n\n  // Métodos para dashboard\n  async getDashboardData() {\n    const response = await this.client.get('/dashboard');\n    return response.data;\n  }\n  async getMarketOverview() {\n    const response = await this.client.get('/dashboard/market-overview');\n    return response.data;\n  }\n  async getTopMovers() {\n    const response = await this.client.get('/dashboard/top-movers');\n    return response.data;\n  }\n\n  // Métodos para configurações\n  async getUserSettings() {\n    const response = await this.client.get('/settings');\n    return response.data;\n  }\n  async updateUserSettings(settings) {\n    const response = await this.client.put('/settings', settings);\n    return response.data;\n  }\n\n  // Método genérico para requisições customizadas\n  async request(method, url, data, config) {\n    return this.client.request({\n      method,\n      url,\n      data,\n      ...config\n    });\n  }\n}\nexport const apiService = new ApiService();\nexport default apiService;","map":{"version":3,"names":["axios","API_BASE_URL","process","env","REACT_APP_API_URL","ApiService","constructor","client","create","baseURL","headers","interceptors","request","use","config","token","localStorage","getItem","Authorization","error","Promise","reject","response","_error$response","status","removeItem","window","location","href","getMarketData","symbols","get","params","join","data","getHistoricalData","symbol","period","searchSymbols","query","q","getAnalyses","createAnalysis","agentId","post","getAnalysisById","id","getAgents","getAgentById","createAgent","agent","updateAgent","put","deleteAgent","delete","executeAgent","parameters","restartAgent","getPortfolios","getPortfolioById","createPortfolio","portfolio","updatePortfolio","deletePortfolio","addPosition","portfolioId","position","updatePosition","removePosition","getDashboardData","getMarketOverview","getTopMovers","getUserSettings","updateUserSettings","settings","method","url","apiService"],"sources":["C:/Users/Usuário/Documents/novo/IA_MARK_01/frontend/src/services/apiService.ts"],"sourcesContent":["import axios, { AxiosInstance, AxiosResponse } from 'axios';\n\nconst API_BASE_URL = process.env.REACT_APP_API_URL || 'http://localhost:8080/api';\n\ninterface FinancialData {\n  symbol: string;\n  price: number;\n  change: number;\n  changePercent: number;\n  volume: number;\n  marketCap?: number;\n  timestamp: string;\n}\n\ninterface AnalysisResult {\n  id: string;\n  symbol: string;\n  analysis: string;\n  recommendation: 'BUY' | 'SELL' | 'HOLD';\n  confidence: number;\n  timestamp: string;\n  agent: string;\n}\n\ninterface Agent {\n  id: string;\n  name: string;\n  type: string;\n  status: 'ACTIVE' | 'INACTIVE' | 'RUNNING';\n  description: string;\n  configuration: Record<string, any>;\n  lastExecution?: string;\n}\n\ninterface Portfolio {\n  id: string;\n  name: string;\n  totalValue: number;\n  totalCost: number;\n  totalGainLoss: number;\n  totalGainLossPercent: number;\n  positions: Position[];\n  createdAt: string;\n  lastUpdate: string;\n}\n\ninterface Position {\n  symbol: string;\n  quantity: number;\n  averagePrice: number;\n  currentPrice: number;\n  totalValue: number;\n  unrealizedPnL: number;\n  unrealizedPnLPercent: number;\n}\n\nclass ApiService {\n  private client: AxiosInstance;\n\n  constructor() {\n    this.client = axios.create({\n      baseURL: API_BASE_URL,\n      headers: {\n        'Content-Type': 'application/json',\n      },\n    });\n\n    // Interceptor para adicionar token de autenticação\n    this.client.interceptors.request.use(\n      (config) => {\n        const token = localStorage.getItem('authToken');\n        if (token) {\n          config.headers.Authorization = `Bearer ${token}`;\n        }\n        return config;\n      },\n      (error) => Promise.reject(error)\n    );\n\n    // Interceptor para lidar com erros de resposta\n    this.client.interceptors.response.use(\n      (response) => response,\n      (error) => {\n        if (error.response?.status === 401) {\n          localStorage.removeItem('authToken');\n          window.location.href = '/login';\n        }\n        return Promise.reject(error);\n      }\n    );\n  }\n\n  // Métodos para dados financeiros\n  async getMarketData(symbols: string[]): Promise<FinancialData[]> {\n    const response = await this.client.get('/market/data', {\n      params: { symbols: symbols.join(',') },\n    });\n    return response.data;\n  }\n\n  async getHistoricalData(\n    symbol: string,\n    period: string = '1y'\n  ): Promise<any[]> {\n    const response = await this.client.get(`/market/historical/${symbol}`, {\n      params: { period },\n    });\n    return response.data;\n  }\n\n  async searchSymbols(query: string): Promise<any[]> {\n    const response = await this.client.get('/market/search', {\n      params: { q: query },\n    });\n    return response.data;\n  }\n\n  // Métodos para análises\n  async getAnalyses(symbol?: string): Promise<AnalysisResult[]> {\n    const response = await this.client.get('/analyses', {\n      params: symbol ? { symbol } : {},\n    });\n    return response.data;\n  }\n\n  async createAnalysis(symbol: string, agentId: string): Promise<AnalysisResult> {\n    const response = await this.client.post('/analyses', {\n      symbol,\n      agentId,\n    });\n    return response.data;\n  }\n\n  async getAnalysisById(id: string): Promise<AnalysisResult> {\n    const response = await this.client.get(`/analyses/${id}`);\n    return response.data;\n  }\n\n  // Métodos para agentes\n  async getAgents(): Promise<Agent[]> {\n    const response = await this.client.get('/agents');\n    return response.data;\n  }\n\n  async getAgentById(id: string): Promise<Agent> {\n    const response = await this.client.get(`/agents/${id}`);\n    return response.data;\n  }\n\n  async createAgent(agent: Omit<Agent, 'id'>): Promise<Agent> {\n    const response = await this.client.post('/agents', agent);\n    return response.data;\n  }\n\n  async updateAgent(id: string, agent: Partial<Agent>): Promise<Agent> {\n    const response = await this.client.put(`/agents/${id}`, agent);\n    return response.data;\n  }\n\n  async deleteAgent(id: string): Promise<void> {\n    await this.client.delete(`/agents/${id}`);\n  }\n\n  async executeAgent(id: string, parameters?: Record<string, any>): Promise<any> {\n    const response = await this.client.post(`/agents/${id}/execute`, parameters);\n    return response.data;\n  }\n\n  async restartAgent(id: string): Promise<void> {\n    await this.client.post(`/agents/${id}/restart`);\n  }\n\n  // Métodos para portfólio\n  async getPortfolios(): Promise<Portfolio[]> {\n    const response = await this.client.get('/portfolios');\n    return response.data;\n  }\n\n  async getPortfolioById(id: string): Promise<Portfolio> {\n    const response = await this.client.get(`/portfolios/${id}`);\n    return response.data;\n  }\n\n  async createPortfolio(portfolio: Omit<Portfolio, 'id' | 'totalValue' | 'totalReturn' | 'totalReturnPercent' | 'positions'>): Promise<Portfolio> {\n    const response = await this.client.post('/portfolios', portfolio);\n    return response.data;\n  }\n\n  async updatePortfolio(id: string, portfolio: Partial<Portfolio>): Promise<Portfolio> {\n    const response = await this.client.put(`/portfolios/${id}`, portfolio);\n    return response.data;\n  }\n\n  async deletePortfolio(id: string): Promise<void> {\n    await this.client.delete(`/portfolios/${id}`);\n  }\n\n  async addPosition(portfolioId: string, position: Omit<Position, 'currentPrice' | 'totalValue' | 'unrealizedPnL' | 'unrealizedPnLPercent'>): Promise<Position> {\n    const response = await this.client.post(`/portfolios/${portfolioId}/positions`, position);\n    return response.data;\n  }\n\n  async updatePosition(portfolioId: string, symbol: string, position: Partial<Position>): Promise<Position> {\n    const response = await this.client.put(`/portfolios/${portfolioId}/positions/${symbol}`, position);\n    return response.data;\n  }\n\n  async removePosition(portfolioId: string, symbol: string): Promise<void> {\n    await this.client.delete(`/portfolios/${portfolioId}/positions/${symbol}`);\n  }\n\n  // Métodos para dashboard\n  async getDashboardData(): Promise<any> {\n    const response = await this.client.get('/dashboard');\n    return response.data;\n  }\n\n  async getMarketOverview(): Promise<any> {\n    const response = await this.client.get('/dashboard/market-overview');\n    return response.data;\n  }\n\n  async getTopMovers(): Promise<any> {\n    const response = await this.client.get('/dashboard/top-movers');\n    return response.data;\n  }\n\n  // Métodos para configurações\n  async getUserSettings(): Promise<any> {\n    const response = await this.client.get('/settings');\n    return response.data;\n  }\n\n  async updateUserSettings(settings: any): Promise<any> {\n    const response = await this.client.put('/settings', settings);\n    return response.data;\n  }\n\n  // Método genérico para requisições customizadas\n  async request<T = any>(\n    method: 'GET' | 'POST' | 'PUT' | 'DELETE',\n    url: string,\n    data?: any,\n    config?: any\n  ): Promise<AxiosResponse<T>> {\n    return this.client.request({\n      method,\n      url,\n      data,\n      ...config,\n    });\n  }\n}\n\nexport const apiService = new ApiService();\nexport default apiService;\nexport type { FinancialData, AnalysisResult, Agent, Portfolio, Position };"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}