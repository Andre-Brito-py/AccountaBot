# FinRobot Java Application Configuration
spring:
  application:
    name: finrobot-java
  
  # Database Configuration
  datasource:
    url: jdbc:h2:mem:finrobot
    driver-class-name: org.h2.Driver
    username: sa
    password: 
  
  h2:
    console:
      enabled: true
      path: /h2-console
  
  jpa:
    hibernate:
      ddl-auto: create-drop
    show-sql: false
    properties:
      hibernate:
        dialect: org.hibernate.dialect.H2Dialect
        format_sql: true
  
  # Jackson Configuration
  jackson:
    serialization:
      write-dates-as-timestamps: false
    deserialization:
      fail-on-unknown-properties: false
  
  # Cache Configuration
  cache:
    type: simple
  
  # Actuator Configuration
  management:
    endpoints:
      web:
        exposure:
          include: health,info,metrics
    endpoint:
      health:
        show-details: when-authorized

# Server Configuration
server:
  port: 8080
  servlet:
    context-path: /api

# Logging Configuration
logging:
  level:
    com.finrobot: INFO
    org.springframework: WARN
    org.hibernate: WARN
  pattern:
    console: "%d{yyyy-MM-dd HH:mm:ss} - %msg%n"
    file: "%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n"
  file:
    name: logs/finrobot.log

# FinRobot Specific Configuration
finrobot:
  # LLM Configuration
  llm:
    openai:
      api-key: ${OPENAI_API_KEY:your-openai-api-key}
      model: gpt-4
      temperature: 0.7
      max-tokens: 2000
    
    langchain4j:
      enabled: true
      memory:
        max-messages: 100
  
  # Financial Data Sources
  datasources:
    yahoo-finance:
      enabled: true
      base-url: https://query1.finance.yahoo.com
      timeout: 30000
    
    alpha-vantage:
      enabled: true
      api-key: ${ALPHA_VANTAGE_API_KEY:your-alpha-vantage-key}
      base-url: https://www.alphavantage.co
      timeout: 30000
    
    finnhub:
      enabled: true
      api-key: ${FINNHUB_API_KEY:your-finnhub-key}
      base-url: https://finnhub.io/api/v1
      timeout: 30000
  
  # Agent Configuration
  agents:
    market-forecasting:
      enabled: true
      chain-of-thought: true
      max-analysis-depth: 5
    
    document-analysis:
      enabled: true
      supported-formats: ["pdf", "txt", "csv"]
      max-file-size: 10MB
    
    trading-strategy:
      enabled: true
      risk-management: true
      backtesting: true
  
  # Scheduler Configuration
  scheduler:
    enabled: true
    thread-pool-size: 10
    task-queue-capacity: 100
  
  # Cache Configuration
  cache:
    market-data:
      ttl: 300 # 5 minutes
      max-size: 1000
    
    analysis-results:
      ttl: 1800 # 30 minutes
      max-size: 500

---
# Development Profile
spring:
  config:
    activate:
      on-profile: dev
  
  h2:
    console:
      enabled: true
  
  jpa:
    show-sql: true

logging:
  level:
    com.finrobot: DEBUG
    org.springframework.web: DEBUG

---
# Production Profile
spring:
  config:
    activate:
      on-profile: prod
  
  datasource:
    url: jdbc:postgresql://localhost:5432/finrobot
    driver-class-name: org.postgresql.Driver
    username: ${DB_USERNAME:finrobot}
    password: ${DB_PASSWORD:password}
  
  jpa:
    hibernate:
      ddl-auto: validate
    show-sql: false

logging:
  level:
    com.finrobot: INFO
    org.springframework: WARN
  file:
    name: /var/log/finrobot/application.log